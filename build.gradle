buildscript {
    repositories {
        mavenCentral()
    }
    ext {
        kotlinVersion = '1.0.0-beta-1038'
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
    id 'groovy'
    id 'scala'
    id 'idea'
    id 'me.champeau.gradle.jmh' version '0.2.0'
    id 'com.github.ben-manes.versions' version '0.11.3'
}

apply plugin: 'kotlin'

tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
}

repositories {
    jcenter()
}

jmh {
    jmhVersion = '1.11.1'
    warmupIterations = 15
    iterations = 30
    fork = 1
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.5:indy'

    compile 'org.projectlombok:lombok:1.16.6'

    compile 'com.google.auto.value:auto-value:1.1'

    compile 'com.google.guava:guava:18.0'

    compile 'org.scala-lang:scala-library:2.11.7'
    compile 'org.scala-lang:scala-compiler:2.11.7'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    
    compile fileTree(dir: 'lib', include: '*.jar')
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.jmh]
    }
}

task measureMemory(type: JavaExec) {
    main = 'com.netflix.model.ModelMeasurer'
    classpath = sourceSets.jmh.runtimeClasspath
    jvmArgs = ["-javaagent:${file('lib/object-explorer.jar')}"]
}
